@model Dental_Clinic_System.ViewModels.PatientRecordVM

@{
	ViewData["Title"] = "EditPatientRecord";
	List<string> jobList = new() { "Còn nhỏ", "Học sinh / Sinh viên", "Nội trợ", "Giáo viên", "Công nhân", "Kỹ sư", "Nhân viên văn phòng", "Khác" };
	jobList.RemoveAll(job => string.Compare(job, Model.Job, true) == 0);
	Console.WriteLine(Model.District);
}
}

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Dental Care | login</title>
	<link rel="stylesheet"
		  href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" />
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	<link href="https://fonts.googleapis.com/css2?family=Baloo+Paaji+2:wght@400..800&display=swap"
		  rel="stylesheet" />
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
		  rel="stylesheet"
		  integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
		  crossorigin="anonymous" />
	<link rel="stylesheet" href="~/assets/css/header.css" />
	<link rel="stylesheet" href="~/assets/css/footer.css" />
	<link rel="stylesheet" href="~/assets/css/patientrecord.css" />
</head>

<div class="pt__record add">
	<h1 class="pt__record__title text-center fw-bold">Tạo mới hồ sơ</h1>
	<div class="text-center">
		<img src="~/assets/images/separate.png" alt="" />
	</div>
	<div class="pt__record__add__wrapper">
		<div class="style__container add">
			<div class="style__container__add">
				<h2 class="record__add__title text-center">Cập nhật thông tin</h2>
				<div class="record__add__desc">
					Vui lòng cung cấp thông tin chính xác để được phục vụ tốt nhất.
					Trong trường hợp cung cấp sai thông tin bệnh nhân & điện thoại,
					việc xác nhận cuộc hẹn sẽ không hiệu lực trước khi đặt khám.
				</div>
				<div class="record__add__required">
					(*) Thông tin bắt buộc nhập
				</div>
				<form method="post" action="" class="record__add__form row">
					<div class="col-md-6">
						<label for="fullname">Họ và tên (có dấu)<sup>*</sup></label>
						<input asp-for="FullName" id="fullname" type="text" placeholder="VÍ DỤ: AN PHÚC HOÀ" />
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="FullName"></span>
					</div>
					<div class="col-md-6">
						<label for="dateofbirth">Ngày sinh (năm/tháng/ngày) <sup>*</sup></label>
						<input asp-for="DateOfBirdth" id="dateofbirth" type="date" max="@DateOnly.FromDateTime(DateTime.Now).AddYears(-1).ToString("yyyy-MM-dd")" style="width: 100%" />
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="DateOfBirdth"></span>
					</div>
					<div class="col-md-6">
						<label for="phonenumber">Số điện thoại <sup id="phoneSup">*</sup></label>
						<input asp-for="PhoneNumber" id="phonenumber" type="text" placeholder="Vui lòng nhập số điện thoại" />
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="PhoneNumber"></span>
					</div>
					<div class="col-md-6">
						<label for="gender">Giới tính<sup>*</sup></label>
						<select asp-for="Gender" id="gender">
							@if (Model.Gender == "Nam")
							{
								<option value=null disabled>Chọn giới tính ...</option>
								<option value="Nam" selected>Nam</option>
								<option value="Nữ">Nữ</option>
							}
							else if (Model.Gender == "Nữ")
							{
								<option value=null disabled>Chọn giới tính ...</option>
								<option value="Nam">Nam</option>
								<option value="Nữ" selected>Nữ</option>
							}
							else
							{
								<option value=null disabled selected>Chọn giới tính ...</option>
								<option value="Nam">Nam</option>
								<option value="Nữ">Nữ</option>
							}
						</select>
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="Gender"></span>
					</div>
					<div class="col-md-6">
						<label for="job">Nghề nghiệp</label>
						<select asp-for="Job" id="job">
							<option value="" disabled>Chọn nghề nghiệp</option>
							<option value="@Model.Job" selected>@Model.Job</option>
							@foreach (var job in jobList)
							{
								<option value="@job">@job</option>
							}
						</select>
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="Job"></span>
					</div>
					<div class="col-md-6">
						<label for="identityNumber">Số CMND/CCCD</label>
						<input asp-for="IdentifyNumber" id="identityNumber" type="text" placeholder="Nhâp số CMND/CCCD" />
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="IdentifyNumber"></span>
					</div>
					<div class="col-md-6">
						<label for="email">Địa chỉ Email</label>
						<input asp-for="Email" id="email" type="email" placeholder="Nhập địa chỉ email để nhận phiếu khám" />
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="Email"></span>
					</div>
					<div class="col-md-6">
						<label for="province">Tỉnh / Thành <sup>*</sup></label>
						<select id="tinh" title="Chọn Tỉnh Thành" asp-for="Province">
							<option value="0" disabled>Tỉnh Thành</option>
						</select>
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="Province"></span>
					</div>
					<div class="col-md-6">
						<label for="district">Quận / huyện<sup>*</sup></label>
						<select id="quan" title="Chọn Quận huyện" asp-for="District">
							<option value="0" disabled>Quận huyện</option>
						</select>
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="District"></span>
					</div>
					<div class="col-md-6">
						<label for="ward">Phường / Xã<sup>*</sup></label>
						<select id="phuong" title="Chọn Phường Xã" asp-for="Ward">
							<option value="0" disabled>Phường xã</option>
						</select>
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="Ward"></span>
					</div>
					<div class="col-md-12">
						<label for="address">Địa chỉ <sup>*</sup></label>
						<input asp-for="Address" id="address" type="text" placeholder="Nhập địa chỉ" />
						<span class="text-danger" style="font-size: 17px;" asp-validation-for="Address"></span>
					</div>


					@* ========================PHÂN CÁCH VỚI FM========================== *@

					<div id="age__check" class="row">
						<div class="record__add__form__divider col-md-12"></div>
						<h2 class="family__member__add__title col-md-12 text-center">
							Nhập thông tin nhân thân
						</h2>
						<div class="col-md-6">
							<label for="fmfullname">HỌ VÀ TÊN NGƯỜI THÂN (CÓ DẤU)<sup>*</sup></label><input asp-for="FMFullName"
																					   id="fmfullname"
																					   type="text"
																					   placeholder="Nhập họ tên người thân" />
							<span class="text-danger" style="font-size: 17px;" asp-validation-for="FMFullName"></span>
						</div>
						<div class="col-md-6">
							<label for="relationship">Quan hệ với bệnh nhân<sup>*</sup></label>
							<select asp-for="FMRelationship" id="relationship">
								<option value="" disabled selected>Chọn quan hệ</option>
								<option value="dad">Cha</option>
								<option value="mom">Mẹ</option>
								<option value="grandpa">Ông</option>
								<option value="grandma">Bà</option>
								<option value="brother">Anh</option>
								<option value="sister">Chị</option>
							</select>
							<span class="text-danger" style="font-size: 17px;" asp-validation-for="FMRelationship"></span>
						</div>
						<div class="col-md-6">
							<label for="fmphonenumber">Số điện thoại<sup>*</sup></label><input asp-for="FMPhoneNumber"
																		  id="fmphonenumber"
																		  type="text"
																		  placeholder="Vui lòng nhập số điện thoại" />
							<span class="text-danger" style="font-size: 17px;" asp-validation-for="FMPhoneNumber"></span>
						</div>
						<div class="col-md-6">
							<label for="fmemail"> Địa chỉ Email<sup>*</sup></label><input asp-for="FMEmail"
																						  id="fmemail"
																						  type="text"
																						  placeholder="Nhập địa chỉ email để nhận phiếu khám" />
							<span class="text-danger" style="font-size: 17px;" asp-validation-for="FMEmail"></span>
						</div>
					</div>

					<div class="btn-wrapper add__record">
						<button type="submit" class="add-record-btn">
							Cập nhật
						</button>
					</div>
					<input type="hidden" name="retrnUrl" value="/">
				</form>
			</div>
		</div>
	</div>
</div>

<script>
	document
		.getElementById("dateofbirth")
		.addEventListener("change", function () {
			const dob = new Date(this.value);
			const today = new Date();
			const age = today.getFullYear() - dob.getFullYear();
			const ageCheck = document.getElementById("age__check");
			const phoneSup = document.getElementById("phoneSup");

			if (age < 14) {
				ageCheck.style.display = "inherit";
				phoneSup.style.display = "none";
			} else {
				ageCheck.style.display = "none";
				phoneSup.style.display = "inline";
			}
		});

	document
		.querySelector(".reset-btn")
		.addEventListener("click", function () {
			document.getElementById("age__check").style.display = "none";
			document.getElementById("phoneSup").style.display = "inline";
		});
</script>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const dateOfBirthInput = document.getElementById("dateofbirth");
		const ageCheckDiv = document.getElementById("age__check");
		const phoneNumberInput = document.getElementById("phonenumber");
		const identityNumberInput = document.getElementById("identityNumber");
		const jobSelect = document.getElementById("job");

		function calculateAge(dateOfBirth) {
			const birthDate = new Date(dateOfBirth);
			const today = new Date();
			let age = today.getFullYear() - birthDate.getFullYear();
			const monthDifference = today.getMonth() - birthDate.getMonth();
			if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
				age--;
			}
			return age;
		}

		function toggleFamilyMemberInfo() {
			const age = calculateAge(dateOfBirthInput.value);
			if (age < 14) {
				ageCheckDiv.style.display = "inherit";
				phoneNumberInput.disabled = true;
				identityNumberInput.disabled = true;
				jobSelect.disabled = true;
				jobSelect.innerHTML = '<option value="Còn nhỏ">Còn nhỏ</option>';
			} else {
				ageCheckDiv.style.display = "none";
				phoneNumberInput.disabled = false;
				identityNumberInput.disabled = false;
				jobSelect.disabled = false;
				jobSelect.innerHTML = `
						<option value="" disabled>Chọn nghề nghiệp</option>
								<option value="Còn nhỏ">Còn nhỏ</option>
								<option value="Học sinh / Sinh viên">Học sinh / Sinh viên</option>
								<option value="Nội trợ">Nội trợ</option>
								<option value="Giáo viên">Giáo viên</option>
								<option value="Công nhân">Công nhân</option>
								<option value="Kỹ sư">Kỹ sư</option>
								<option value="Nhân viên văn phòng">Nhân viên văn phòng</option>
					`;
			}
		}

		dateOfBirthInput.addEventListener("change", toggleFamilyMemberInfo);

		// Initialize the display based on current date of birth
		if (dateOfBirthInput.value) {
			toggleFamilyMemberInfo();
		}
	});
</script>



<script src="https://esgoo.net/scripts/jquery.js"></script>
@*Lấy id trả về tên tỉnh thành đổ vào các thẻ option hiển thị ra*@
<script>
	$(document).ready(function () {
		var savedProvince = '@Model.Province';
		var savedDistrict = '@Model.District';
		var savedWard = '@Model.Ward';

		// Function to format ID with leading zeros based on the length requirement
		function formatId(id, length) {
			return id.toString().padStart(length, '0');
		}

		var savedProvinceId = savedProvince ? formatId(parseInt(savedProvince, 10), 2) : null;
		var savedDistrictId = savedDistrict ? formatId(parseInt(savedDistrict, 10), 3) : null;
		var savedWardId = savedWard ? formatId(parseInt(savedWard, 10), 5) : null;

		function loadWards(idquan, callback) {
			var formattedId = formatId(idquan, 3);
			$.getJSON('https://esgoo.net/api-tinhthanh/3/' + formattedId + '.htm', function (data_phuong) {
				if (data_phuong.error == 0) {
					$("#phuong").html('<option value="0">Phường Xã</option>');
					$.each(data_phuong.data, function (key_phuong, val_phuong) {
						var selected = (val_phuong.id == savedWardId) ? ' selected' : '';
						$("#phuong").append('<option value="' + val_phuong.id + '" data-fullname="' + val_phuong.full_name + '"' + selected + '>' + val_phuong.full_name + '</option>');
					});

					if (callback) {
						callback();
					}
				}
			});
		}

		function loadDistricts(idtinh, callback) {
			var formattedId = formatId(idtinh, 2);
			$.getJSON('https://esgoo.net/api-tinhthanh/2/' + formattedId + '.htm', function (data_quan) {
				if (data_quan.error == 0) {
					$("#quan").html('<option value="0">Quận Huyện</option>');
					$("#phuong").html('<option value="0">Phường Xã</option>');
					$.each(data_quan.data, function (key_quan, val_quan) {
						var selected = (val_quan.id == savedDistrictId) ? ' selected' : '';
						$("#quan").append('<option value="' + val_quan.id + '" data-fullname="' + val_quan.full_name + '"' + selected + '>' + val_quan.full_name + '</option>');
					});

					if (savedDistrictId) {
						loadWards(savedDistrictId, callback);
					} else if (callback) {
						callback();
					}
				}
			});
		}

		function loadProvinces(callback) {
			$.getJSON('https://esgoo.net/api-tinhthanh/1/0.htm', function (data_tinh) {
				if (data_tinh.error == 0) {
					$("#tinh").html('<option value="0">Tỉnh Thành</option>');
					$.each(data_tinh.data, function (key_tinh, val_tinh) {
						var selected = (val_tinh.id == savedProvinceId) ? ' selected' : '';
						$("#tinh").append('<option value="' + val_tinh.id + '" data-fullname="' + val_tinh.full_name + '"' + selected + '>' + val_tinh.full_name + '</option>');
					});

					if (savedProvinceId) {
						loadDistricts(savedProvinceId, callback);
					} else if (callback) {
						callback();
					}
				}
			});
		}

		function setInitialValues() {
			if (savedProvinceId) {
				$("#tinh").val(savedProvinceId);
				$("#tinh").trigger('change');
			}
			if (savedDistrictId) {
				$("#quan").val(savedDistrictId);
				$("#quan").trigger('change');
			}
			if (savedWardId) {
				$("#phuong").val(savedWardId);
			}
		}

		loadProvinces(setInitialValues);

		$("#tinh").change(function (e) {
			var selectedOption = $(this).find('option:selected');
			var idtinh = selectedOption.val();
			var fullnameTinh = selectedOption.data('fullname');
			$('#Province').val(fullnameTinh);

			// Load districts based on selected province
			loadDistricts(idtinh);
		});

		$("#quan").change(function (e) {
			var selectedOption = $(this).find('option:selected');
			var idquan = selectedOption.val();
			var fullnameQuan = selectedOption.data('fullname');
			$('#District').val(fullnameQuan);

			// Load wards based on selected district
			loadWards(idquan);
		});

		$("#phuong").change(function (e) {
			var selectedOption = $(this).find('option:selected');
			var fullnamePhuong = selectedOption.data('fullname');
			$('#Ward').val(fullnamePhuong);
		});
	});
</script>


